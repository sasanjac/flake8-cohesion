name: release

on:
  milestone:
    types: [closed]

jobs:
  tests:
    uses: ./.github/workflows/tests.yml
  release:
    name: Release a new version
    runs-on: ubuntu-latest
    needs: [tests]
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          architecture: x64
          prerelease: true
          enable-pep582: true

      - name: Installing dependencies
        run: pdm install

      - name: Temporarily disable 'include administrators' default branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: false

      - name: Bump version and create changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          changelog_increment_filename: body.md

      - name: Restore 'include administrators' default branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: ${{ steps.disable_include_admins.outputs.initial_status }}

      - name: Build Python packages
        run: pdm build

      - name: Publish Python packages
        run: pdm publish
        env:
          PDM_PUBLISH_REPO: pypi
          PDM_PUBLISH_USERNAME: __token__
          PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          tag_name: ${{ env.REVISION }}
          files: |
            dist/*.whl
            dist/*.tar.gz
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
